<Window x:Class="FileManager.winMain"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FileManager"
        xmlns:properties="clr-namespace:FileManager.Properties"
        xmlns:io="clr-namespace:System.IO;assembly=mscorlib"
        mc:Ignorable="d"
        Title="File Manager" Height="547" Width="472" BorderThickness="2" ResizeMode="CanResizeWithGrip" Icon="include/folderEmpty.ico" Background="#FF464646" Foreground="White" FontFamily="Arial" FontSize="14" WindowStyle="None" UseLayoutRounding="True" Initialized="Window_Initialized" Loaded="Window_Loaded" Closing="Window_Closing" >
  <Window.Resources>
    <BooleanToVisibilityConverter x:Key="VisibleIfTrueConverter" />

    <!--<Style TargetType="{x:Type local:winMain}">
      <Setter Property="Background" Value="#FF464646"/>
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="FontFamily" Value="Arial"/>
      <Setter Property="FontSize" Value="14"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>-->
    <Style TargetType="{x:Type Label}">
      <!--<Setter Property="Background" Value="Transparent"/>-->
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="FontFamily" Value="Arial"/>
      <Setter Property="FontSize" Value="14"/>
      <Setter Property="Padding" Value="5,2"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style TargetType="{x:Type TextBox}">
      <!--<Setter Property="Background" Value="#FF9C9C9C"/>-->
      <Setter Property="Foreground" Value="Black"/>
      <Setter Property="FontFamily" Value="Arial"/>
      <Setter Property="FontSize" Value="14"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}">
      <!--<Setter Property="Background" Value="#FF9C9C9C"/>-->
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="FontFamily" Value="Arial"/>
      <Setter Property="FontSize" Value="14"/>
      <Setter Property="Padding" Value="5,2"/>
    </Style>
    <Style TargetType="{x:Type CheckBox}">
      <!--<Setter Property="Background" Value="#FF9C9C9C"/>-->
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="FontFamily" Value="Arial"/>
      <Setter Property="FontSize" Value="14"/>
    </Style>
    <Style TargetType="{x:Type Button}">
      <Setter Property="Background" Value="#FF9C9C9C"/>
      <Setter Property="Foreground" Value="White"/>
      <!--<Setter Property="FontFamily" Value="Arial"/>-->
      <Setter Property="FontSize" Value="16"/>
      <!--<Setter Property="VerticalContentAlignment" Value="Center"/>-->
      <Setter Property="BorderBrush" Value="#FF131313"/>
    </Style>
  </Window.Resources>
  <DockPanel>
    <Border DockPanel.Dock="Top" BorderBrush="Black" BorderThickness="0,0,0,1" MouseDown="_MouseDown">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Button x:Name="btnApp" Width="24" Height="24" VerticalAlignment="Top" Click="BtnApp_Click" Background="Transparent" BorderBrush="{x:Null}">
          <Image Source="include\folderEmpty.ico" Width="18" Height="18"/>
        </Button>
        <Border Grid.Column="1">
          <TextBlock x:Name="txtAppName" Text="File Manager" Margin="5,0" VerticalAlignment="Center" Foreground="White"/>
        </Border>
        <Border Grid.Column="2" BorderThickness="1,0,1,0" BorderBrush="White">
          <TextBlock x:Name="txtStatus" Text="{Binding Status}" Margin="5,0" VerticalAlignment="Center" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Foreground="White"/>
        </Border>
        <Border Grid.Column="3">
          <TextBlock x:Name="txtVersion" Text="1.0.0" Margin="5,0" VerticalAlignment="Center" Foreground="White"/>
        </Border>
        <Button x:Name="btnMinimize" Width="24" Height="24" Grid.Column="4" BorderThickness="1" VerticalAlignment="Top" Click="BtnMinimize_Click" Background="Transparent" BorderBrush="#FF686868">
          <Image Source="include\minimize.png" Width="18" Height="18"/>
        </Button>
        <Button x:Name="btnMaximize" Width="24" Height="24" Grid.Column="5" BorderThickness="1" VerticalAlignment="Top" Click="BtnMaximize_Click" Background="Transparent" BorderBrush="#FF686868">
          <Image x:Name="btnMaxImage" Width="18" Height="18">
            <Image.Style>
              <Style TargetType="Image">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Normal">
                    <Setter Property="Source" Value="include\maximize.png"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                    <Setter Property="Source" Value="include\normalize.png"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Image.Style>
          </Image>
        </Button>
        <Button x:Name="btnClose" Width="24" Height="24" Grid.Column="6" BorderThickness="1" VerticalAlignment="Top" Click="BtnClose_Click" Background="Transparent" BorderBrush="#FF686868">
          <Image Source="include\x-neon.png" Width="18" Height="18"/>
        </Button>
      </Grid>
    </Border>
    <Border DockPanel.Dock="Bottom" BorderThickness="0,1,0,0" BorderBrush="Black">
      <StatusBar Height="32" Background="Transparent" >
        <StatusBar.ItemsPanel>
          <ItemsPanelTemplate>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <!-- status -->
                <ColumnDefinition Width="Auto" />
                <!-- seperator -->
                <ColumnDefinition Width="Auto" />
                <!-- number of files -->
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <!-- number of files -->
                <ColumnDefinition Width="Auto" />
                <!-- seperator -->
                <ColumnDefinition Width="200" />
                <!-- progressbar -->
              </Grid.ColumnDefinitions>
            </Grid>
          </ItemsPanelTemplate>
        </StatusBar.ItemsPanel>
        <StatusBarItem>
          <TextBlock x:Name="txtStatusB" Text="{Binding Status}"/>
        </StatusBarItem>
        <Separator Grid.Column="1" />
        <StatusBarItem Grid.Column="2" HorizontalContentAlignment="Right">
          <TextBlock x:Name="txtFileCount" Text="{Binding TotalCount, StringFormat='{}{0:#,0} files'}"/>
        </StatusBarItem>
        <Separator Grid.Column="5" />
        <StatusBarItem Grid.Column="6" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
          <Grid>
            <Label Content="-" HorizontalAlignment="Center"/>
            <ProgressBar x:Name="progressbar" Value="{Binding Progress}" Margin="6,2,12,2" />
            <TextBlock x:Name="txtProgress" Text="{Binding ElementName=progressbar, Path=Value, StringFormat={}{0:0}%}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black"/>
          </Grid>
        </StatusBarItem>
      </StatusBar>
    </Border>
    <Grid Margin="5" DockPanel.Dock="Top">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="24"/>
      </Grid.ColumnDefinitions>
      <Label Content="Source" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
      <TextBox x:Name="txtSource" Grid.Column="1" Grid.Row="0" Text="{Binding Source={x:Static properties:Settings.Default},
                               Path=LastSource}" BorderBrush="#FF3E3E3E" TextChanged="TxtSource_TextChanged"/>
      <Button Grid.Column="2" Grid.Row="0" Content="..." Width="26" VerticalAlignment="Stretch" Click="BrowseSource_Click"/>
      <Label Content="Destination" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Center"/>
      <TextBox x:Name="txtDestination" Grid.Column="1" Grid.Row="1" Text="{Binding Source={x:Static properties:Settings.Default},
                               Path=LastDestination}" BorderBrush="#FF3E3E3E" TextChanged="TxtDestination_TextChanged"/>
      <Button Grid.Column="2" Grid.Row="1" Content="..." Width="26" VerticalAlignment="Stretch" Click="BrowseDestination_Click"/>
      <Label Content="Log" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Center"/>
      <TextBox x:Name="txtLog" Grid.Column="1" Grid.Row="2" Text="{Binding Source={x:Static properties:Settings.Default},
                               Path=LastLogFile}" BorderBrush="#FF3E3E3E" TextChanged="TxtLog_TextChanged"/>
      <Button Grid.Column="2" Grid.Row="2" Content="..." Width="26" VerticalAlignment="Stretch" Click="BrowseLog_Click"/>
      <Button x:Name="btnFlipDirectory" Grid.Column="3" Grid.RowSpan="2" Click="BtnFlipDirectory_Click" >
        <Image Source="include\updn.png"/>
      </Button>
    </Grid>
    <Grid DockPanel.Dock="Top" >
      <ScrollViewer VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto">
        <StackPanel Margin="5" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top">
          <CheckBox x:Name="chkRecursive" Content="recursive" Margin="10,0" VerticalAlignment="Bottom" IsChecked="{Binding Source={x:Static properties:Settings.Default},
                               Path=LastRecursive}" ToolTip="Search subfolders also."/>
          <CheckBox x:Name="chkDeleteOriginal" Content="delete source" Margin="10,0" VerticalAlignment="Bottom" IsChecked="{Binding Source={x:Static properties:Settings.Default},
                               Path=LastDeleteOriginal}" ToolTip="Copy files to destination and always remove the source files. (not yet available)"/>
          <StackPanel Orientation="Horizontal" Margin="10,0">
            <CheckBox x:Name="chkArchive" Content="archive after" VerticalAlignment="Bottom" IsChecked="{Binding Source={x:Static properties:Settings.Default},
                               Path=LastArchive}" ToolTip="Remove the source file if its last modified date is older than the specified number of days."/>
            <TextBox x:Name="txtArchiveDays" Width="40" Margin="5,0" VerticalAlignment="Bottom" Text="{Binding Source={x:Static properties:Settings.Default},
                               Path=LastArchiveDays}" HorizontalContentAlignment="Right"/>
            <Label Content="days" Padding="0" VerticalContentAlignment="Top" VerticalAlignment="Bottom"/>
          </StackPanel>
        </StackPanel>
      </ScrollViewer>
    </Grid>
    <Grid DockPanel.Dock="Top">
      <Grid.ColumnDefinitions>
        <ColumnDefinition/>
        <ColumnDefinition/>
        <ColumnDefinition/>
      </Grid.ColumnDefinitions>
      <Button x:Name="btnMore" Content="more" Grid.Column="0" Padding="10,5" Margin="10" Click="BtnMore_Click"/>
      <Button x:Name="btnPreview" Content="preview" Grid.Column="1" Padding="10,5" Margin="10" Click="BtnPreview_Click"/>
      <Button x:Name="btnStart" Content="start" Grid.Column="2" Padding="10,5" Margin="10" Click="BtnStart_Click"/>
    </Grid>
    <Border BorderThickness="1" BorderBrush="#FFB4B4B4">
      <Grid DockPanel.Dock="Top">
        <Grid.ColumnDefinitions>
          <ColumnDefinition/>
          <ColumnDefinition Width="4"/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <GridSplitter Grid.Column="1"  Background="#FF787878" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="62"/>
            <RowDefinition Height="4"/>
            <RowDefinition/>
          </Grid.RowDefinitions>
          <GridSplitter Grid.Row="1"  Background="#FFC1C1C1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Label Grid.Row="1" Content="folders:" HorizontalAlignment="Right"/>
            <Label Grid.Row="2" Content="files:" HorizontalAlignment="Right"/>
            <Label Grid.Row="3" Content="size:" HorizontalAlignment="Right"/>
            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1" >
              <Image Source="include\X-neon.png" Height="16" Width="16" Visibility="{Binding ProcessCancelled, Converter={StaticResource VisibleIfTrueConverter}}" ToolTip="Process was cancelled. This data is incomplete." Cursor="Help"/>
              <TextBlock Text="{Binding TotalFolders, StringFormat='{}{0:#,##0}'}" />
              <Label Content="/"/>
              <TextBlock Text="{Binding SelectedSourceNode.data.TotalDirectories, StringFormat='{}{0:#,##0}'}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1">
              <Image Source="include\X-neon.png" Height="16" Width="16" HorizontalAlignment="Right" Visibility="{Binding ProcessCancelled, Converter={StaticResource VisibleIfTrueConverter}}" ToolTip="Process was cancelled. This data is incomplete." Cursor="Help"/>
              <TextBlock Text="{Binding TotalFiles, StringFormat='{}{0:#,##0}'}" />
              <Label Content="/"/>
              <TextBlock Text="{Binding SelectedSourceNode.data.TotalFiles, StringFormat='{}{0:#,##0}'}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1">
              <Image Source="include\X-neon.png" Height="16" Width="16" HorizontalAlignment="Right" Visibility="{Binding ProcessCancelled, Converter={StaticResource VisibleIfTrueConverter}}" ToolTip="Process was cancelled. This data is incomplete." Cursor="Help"/>
              <TextBlock Text="{Binding TotalSize, StringFormat='{}{0:#,##0}'}" />
              <Label Content="/"/>
              <TextBlock Text="{Binding SelectedSourceNode.data.TotalData, StringFormat='{}{0:#,##0}'}" />
            </StackPanel>
          </Grid>
          <TreeView x:Name="treeSource" Grid.Row="2" ItemsSource="{Binding Nodes.SourceNodes, Mode=OneWay}" Foreground="Black" TreeViewItem.Expanded="TreeViewItem_Expanded" TreeViewItem.Collapsed="TreeViewItem_Collapsed" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ScrollViewer.ScrollChanged="tree_ScrollChanged" TreeViewItem.Selected="treeViewItem_Selected" SelectedItemChanged="TreeSource_SelectedItemChanged">
            <TreeView.Resources>
              <!--<Style TargetType="{x:Type ScrollViewer}">
                <EventSetter Event="ScrollChanged" Handler="tree_ScrollChanged"/>
              </Style>-->
              <HierarchicalDataTemplate DataType="{x:Type local:NodeModel}" ItemsSource="{Binding Items}">
                <StackPanel Orientation="Horizontal">
                  <Grid Width="16" Height="16" Margin="0,0,5,0">
                    <Image Source="{Binding Image}"/>
                    <Image Source="{Binding ImageOverlay}"/>
                  </Grid>
                  <TextBlock Text="{Binding Name}"/>
                </StackPanel>
              </HierarchicalDataTemplate>
              <!--<DataTemplate DataType="{x:Type local:NodeModel}" >
                <TextBlock Text="{Binding Name}"/>
              </DataTemplate>-->
            </TreeView.Resources>
            <TreeView.ItemContainerStyle>
              <Style TargetType="TreeViewItem">
                <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
              </Style>
            </TreeView.ItemContainerStyle>
          </TreeView>
        </Grid>
        <Grid Grid.Column="2">
          <Grid.RowDefinitions>
            <RowDefinition Height="62"/>
            <RowDefinition Height="4"/>
            <RowDefinition/>
          </Grid.RowDefinitions>
          <GridSplitter Grid.Row="1"  Background="#FFC1C1C1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Label Grid.Row="1" Content="size:" HorizontalAlignment="Right"/>
            <Label Grid.Row="2" Content="modified:" HorizontalAlignment="Right"/>
            <TextBox Grid.ColumnSpan="2" Text="{Binding SelectedDestNode.data.Filespec}" Background="Transparent" Foreground="White" BorderBrush="{x:Null}" IsReadOnly="True"/>
            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding SelectedDestNode.data.TotalData}" />
            <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding SelectedDestNode.data.LastModified}" />
          </Grid>
          <TreeView x:Name="treeDest" Grid.Row="2" ItemsSource="{Binding Nodes.DestNodes, Mode=OneWay}" Foreground="Black" TreeViewItem.Expanded="TreeViewItem_Expanded" TreeViewItem.Collapsed="TreeViewItem_Collapsed" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ScrollViewer.ScrollChanged="tree_ScrollChanged" TreeViewItem.Selected="treeViewItem_Selected" SelectedItemChanged="TreeDest_SelectedItemChanged">
            <TreeView.Resources>
              <!--<Style TargetType="{x:Type ScrollViewer}">
                <EventSetter Event="ScrollChanged" Handler="tree_ScrollChanged"/>
              </Style>-->
              <Style TargetType="{x:Type TreeViewItem}">
                <EventSetter Event="Expanded" Handler="TreeViewItem_Expanded"/>
                <EventSetter Event="Collapsed" Handler="TreeViewItem_Collapsed"/>
              </Style>
              <HierarchicalDataTemplate DataType="{x:Type local:NodeModel}" ItemsSource="{Binding Items}">
                <StackPanel Orientation="Horizontal">
                  <Grid Width="16" Height="16" Margin="0,0,5,0" >
                    <Image Source="{Binding Image}" />
                    <Image Source="{Binding ImageOverlay}" />
                  </Grid>
                  <TextBlock Text="{Binding Name}"/>
                </StackPanel>
              </HierarchicalDataTemplate>
              <!--<DataTemplate DataType="{x:Type local:NodeModel}" >
                <TextBlock Text="{Binding Name}"/>
              </DataTemplate>-->
            </TreeView.Resources>
            <TreeView.ItemContainerStyle>
              <Style TargetType="TreeViewItem">
                <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
              </Style>
            </TreeView.ItemContainerStyle>
          </TreeView>

        </Grid>
      </Grid>
    </Border>
  </DockPanel>
</Window>
